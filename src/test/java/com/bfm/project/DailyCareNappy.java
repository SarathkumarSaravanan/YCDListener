package com.bfm.project;

import java.text.SimpleDateFormat;
import java.time.Duration;
import java.util.Date;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.testng.Assert;
import org.testng.annotations.Test;

public class DailyCareNappy {
	public static WebDriver driver;
	public static Date dt = new Date();
	public static  SimpleDateFormat sdf= new SimpleDateFormat("hh:mm:ss");
	public static  String date=sdf.format(dt);
	
	JavascriptExecutor js;
	@Test
	public void login()
	{
	driver = new ChromeDriver();
	driver.get("https://dev.yourchildsday.com/");
	driver.manage().window().maximize();
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement usname= driver.findElement(By.xpath("(//input[@data-val='true'])[1]"));
	usname.sendKeys("groupleader@yourchildsday.com");
	WebElement psw=driver.findElement(By.xpath("//input[@id='Password']"));
	psw.sendKeys("T0sW#g@0YU4#");
	WebElement btn=driver.findElement(By.xpath("//input[@type='submit']"));
	btn.click();
	}	
	@Test(dependsOnMethods="login")
	public void dailyTask()
	{
	WebElement chld=driver.findElement(By.xpath("//a[text()='Child']"));
	Actions act= new Actions(driver);
	act.moveToElement(chld).perform();
	WebElement dlytsk=driver.findElement(By.xpath("//a[text()='Daily Tasks']"));
	js= (JavascriptExecutor)driver;
	js.executeScript("arguments[0].click()", dlytsk);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement litlebby=driver.findElement(By.xpath("//h3[text()='1 Lilies Baby']"));
	js.executeScript("arguments[0].click()", litlebby);
	WebElement dlycare=	driver.findElement(By.xpath("(//span[text()='Daily Care'])[1]"));
	js.executeScript("arguments[0].click()", dlycare);
	}
	@Test(dependsOnMethods="dailyTask")
	public void adelineNappy() throws InterruptedException
	{
	WebElement nappy=driver.findElement(By.xpath("//span[@aria-label='nappy']"));
	js= (JavascriptExecutor)driver;
	js.executeScript("arguments[0].click()", nappy);
	WebElement alexander=driver.findElement(By.xpath("//div[text()='Alexander']"));
	js.executeScript("arguments[0].click()", alexander);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement nappy1=driver.findElement(By.xpath("//span[text()='NAPPY']"));
	js.executeScript("arguments[0].click()", nappy1);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement dscp=driver.findElement(By.xpath("//textarea[@id='description']"));
	dscp.sendKeys("Testing");
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement npychecked=driver.findElement(By.xpath("//button[text()='Checked']"));
	js.executeScript("arguments[0].click()", npychecked);
	String actual="Nappy - Checked";
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	String expected=(driver.findElement(By.xpath("//span[text()='Nappy - Checked']")).getText());
	Assert.assertEquals(actual, expected);
	System.out.println("Nappy checked successfully");
	Thread.sleep(2000);
	WebElement nappy2=driver.findElement(By.xpath("//span[text()='NAPPY']"));
	js.executeScript("arguments[0].click()", nappy2);
	WebElement wet=driver.findElement(By.xpath("//button[text()='Wet']"));
	js.executeScript("arguments[0].click()", wet);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	String actua11="Nappy - Wet";
	String expected1=(driver.findElement(By.xpath("//span[text()='Nappy - Wet']")).getText());
	Assert.assertEquals(actua11, expected1);
	System.out.println("wet is added");
	Thread.sleep(2000);
	WebElement nappy3=driver.findElement(By.xpath("//span[text()='NAPPY']"));
	js.executeScript("arguments[0].click()", nappy3);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement soiled=driver.findElement(By.xpath("//button[text()='Soiled']"));
	js.executeScript("arguments[0].click()", soiled);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement Regular=driver.findElement(By.xpath("//button[text()='Regular']"));
	js.executeScript("arguments[0].click()", Regular);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	String actua12="Nappy - Soiled";
	String expected2=(driver.findElement(By.xpath("//span[text()='Nappy - Soiled']")).getText());
	Assert.assertEquals(actua12, expected2);
	System.out.println("Soiled-Regular is added");
	WebElement timeslc=driver.findElement(By.xpath("//button[@title='Toggle TimeSelector']"));
	js.executeScript("arguments[0].click()", timeslc);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement time=driver.findElement(By.xpath("//input[@role='combobox']"));
	time.sendKeys(""+date+"");
	js.executeScript("arguments[0].click()", timeslc);
	Thread.sleep(2000);
	WebElement nappy4=driver.findElement(By.xpath("//span[text()='NAPPY']"));
	js.executeScript("arguments[0].click()", nappy4);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement Soiled1=driver.findElement(By.xpath("//button[text()='Soiled']"));
	js.executeScript("arguments[0].click()", Soiled1);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement Loose=driver.findElement(By.xpath("//button[text()='Loose']"));
	js.executeScript("arguments[0].click()", Loose);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	String actua13="Nappy - Soiled - Loose";
	String expected3=(driver.findElement(By.xpath("//span[text()='Nappy - Soiled - Loose']")).getText());
	Assert.assertEquals(actua13, expected3);
	System.out.println("Soiled-Loose is added");
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement nappy5=driver.findElement(By.xpath("//span[text()='NAPPY']"));
	js.executeScript("arguments[0].click()", nappy5);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement Soiled2=driver.findElement(By.xpath("//button[text()='Soiled']"));
	js.executeScript("arguments[0].click()", Soiled2);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement Hard=driver.findElement(By.xpath("//button[text()='Hard']"));
	js.executeScript("arguments[0].click()",Hard);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	String actua14="Nappy - Soiled - Hard";
	String expected4=(driver.findElement(By.xpath("//span[text()='Nappy - Soiled - Hard']")).getText());
	Assert.assertEquals(actua14, expected4);
	System.out.println("Soiled-Hard is added");
	}
	@Test(dependsOnMethods="adelineNappy")
	public void addUndies() throws InterruptedException {
	Thread.sleep(2000);
	WebElement undies=driver.findElement(By.xpath("//span[text()='UNDIES']"));
	js= (JavascriptExecutor)driver;
	js.executeScript("arguments[0].click()", undies);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement desp1=driver.findElement(By.xpath("//textarea[@id='description']"));
	desp1.sendKeys("Testing");
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement npychecked=driver.findElement(By.xpath("//button[text()='Checked']"));
	js.executeScript("arguments[0].click()", npychecked);
	String actual="Undies - Checked";
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	String expected=(driver.findElement(By.xpath("//span[text()='Undies - Checked']")).getText());
	Assert.assertEquals(actual, expected);
	System.out.println("Undies checked successfully");
	Thread.sleep(2000);
	WebElement undies1=driver.findElement(By.xpath("//span[text()='UNDIES']"));
	js.executeScript("arguments[0].click()", undies1);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement wet=driver.findElement(By.xpath("//button[text()='Wet']"));
	js.executeScript("arguments[0].click()", wet);
	Thread.sleep(2000);
	String actual1="Undies - Wet";
	String expected1=(driver.findElement(By.xpath("//span[text()='Undies - Wet']")).getText());
	Assert.assertEquals(actual1, expected1);
	System.out.println("Undies-wet is added");
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement undies2=driver.findElement(By.xpath("//span[text()='UNDIES']"));
	js.executeScript("arguments[0].click()", undies2);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement soiled=driver.findElement(By.xpath("//button[text()='Soiled']"));
	js.executeScript("arguments[0].click()", soiled);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement Regular=driver.findElement(By.xpath("//button[text()='Regular']"));
	js.executeScript("arguments[0].click()", Regular);
	String actual2="Undies - Soiled";
	String expected2=(driver.findElement(By.xpath("//span[text()='Undies - Soiled']")).getText());
	Assert.assertEquals(actual2, expected2);
	System.out.println("Undies-Soiled-Regular is added");
	Thread.sleep(2000);
	WebElement undies3=driver.findElement(By.xpath("//span[text()='UNDIES']"));
	js.executeScript("arguments[0].click()", undies3);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement soiled1=driver.findElement(By.xpath("//button[text()='Soiled']"));
	js.executeScript("arguments[0].click()", soiled1);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement Loose=driver.findElement(By.xpath("//button[text()='Loose']"));
	js.executeScript("arguments[0].click()", Loose);
	String actual3="Undies - Soiled - Loose";
	String expected3=(driver.findElement(By.xpath("//span[text()='Undies - Soiled - Loose']")).getText());
	Assert.assertEquals(actual3, expected3);
	System.out.println("Undies-Soiled-Loose is added");
	Thread.sleep(2000);
	WebElement undies4=driver.findElement(By.xpath("//span[text()='UNDIES']"));
	js.executeScript("arguments[0].click()", undies4);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement soiled2=driver.findElement(By.xpath("//button[text()='Soiled']"));
	js.executeScript("arguments[0].click()", soiled2);
	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
	WebElement Hard=driver.findElement(By.xpath("//button[text()='Hard']"));
	js.executeScript("arguments[0].click()",Hard);
	String actual4="Undies - Soiled - Hard";
	String expected4=(driver.findElement(By.xpath("//span[text()='Undies - Soiled - Hard']")).getText());
	Assert.assertEquals(actual4, expected4);
	System.out.println("Undies-Soiled-Hard is added");
	}
	@Test(dependsOnMethods="addUndies")
	public void addToilet() throws InterruptedException
	{
		Thread.sleep(2000);
		WebElement toilet=driver.findElement(By.xpath("//span[text()='TOILET']"));
		js= (JavascriptExecutor)driver;
		js.executeScript("arguments[0].click()", toilet);
		WebElement desp2=driver.findElement(By.xpath("//textarea[@id='description']"));
		desp2.sendKeys("Testing");
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		WebElement atmpted=driver.findElement(By.xpath("//button[text()='Attempted']"));
		js.executeScript("arguments[0].click()",atmpted);
		String actual1="Toilet - Attempted";
		String expected1=(driver.findElement(By.xpath("//span[text()='Toilet - Attempted']")).getText());
		Assert.assertEquals(actual1, expected1);
		System.out.println("Toilet-Attempted is added");
		Thread.sleep(2000);
		WebElement toilet1=driver.findElement(By.xpath("//span[text()='TOILET']"));
		js.executeScript("arguments[0].click()", toilet1);
		WebElement refused=driver.findElement(By.xpath("//button[text()='Refused']"));
		js.executeScript("arguments[0].click()",refused);
		String actual2="Toilet - Refused";
		String expected2=(driver.findElement(By.xpath("//span[text()='Toilet - Refused']")).getText());
		Assert.assertEquals(actual2, expected2);
		System.out.println("Toilet-Refused is added");
		Thread.sleep(2000);
		WebElement toilet2=driver.findElement(By.xpath("//span[text()='TOILET']"));
		js.executeScript("arguments[0].click()", toilet2);
		WebElement wee=driver.findElement(By.xpath("//button[text()='Wee']"));
		js.executeScript("arguments[0].click()",wee);
		String actual3="Toilet - Wee";
		String expected3=(driver.findElement(By.xpath("//span[text()='Toilet - Wee']")).getText());
		Assert.assertEquals(actual3, expected3);
		System.out.println("Toilet-Wee is added");
		Thread.sleep(2000);
		WebElement toilet3=driver.findElement(By.xpath("//span[text()='TOILET']"));
		js.executeScript("arguments[0].click()", toilet3);
		WebElement bowel=driver.findElement(By.xpath("//button[text()='Bowel']"));
		js.executeScript("arguments[0].click()",bowel);
		WebElement regular=driver.findElement(By.xpath("//button[text()='Regular']"));
		js.executeScript("arguments[0].click()",regular);
		String actual4="Toilet - Bowel";
		String expected4=(driver.findElement(By.xpath("//span[text()='Toilet - Bowel']")).getText());
		Assert.assertEquals(actual4, expected4);
		System.out.println("Toilet-Bowel-Regular is added");
		Thread.sleep(2000);
		WebElement toilet4=driver.findElement(By.xpath("//span[text()='TOILET']"));
		js.executeScript("arguments[0].click()", toilet4);
		WebElement bowe2=driver.findElement(By.xpath("//button[text()='Bowel']"));
		js.executeScript("arguments[0].click()",bowe2);
		WebElement loose=driver.findElement(By.xpath("//button[text()='Loose']"));
		js.executeScript("arguments[0].click()",loose);
		String actual5="Toilet - Bowel - Loose";
		String expected5=(driver.findElement(By.xpath("//span[text()='Toilet - Bowel - Loose']")).getText());
		Assert.assertEquals(actual5, expected5);
		System.out.println("Toilet-Bowel-Loose is added");
		Thread.sleep(2000);
		WebElement toilet5=driver.findElement(By.xpath("//span[text()='TOILET']"));
		js.executeScript("arguments[0].click()", toilet5);
		WebElement bowe3=driver.findElement(By.xpath("//button[text()='Bowel']"));
		js.executeScript("arguments[0].click()",bowe3);
		WebElement hard=driver.findElement(By.xpath("//button[text()='Hard']"));
		js.executeScript("arguments[0].click()",hard);
		String actual6="Toilet - Bowel - Hard";
		String expected6=(driver.findElement(By.xpath("//span[text()='Toilet - Bowel - Hard']")).getText());
		Assert.assertEquals(actual6, expected6);
		System.out.println("Toilet-Bowel-Hard is added");
		}
		}
